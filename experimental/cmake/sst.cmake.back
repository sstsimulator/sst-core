# cmake/sst.cmake
#
# Copyright 2009-2021 National Technology and Engineering Solutions of Sandia,
# LLC (NTESS).  Under the terms of Contract DE-NA-0003525, the U.S. Government
# retains certain rights in this software.
#
# See LICENSE for full license details
#

INCLUDE(CheckIncludeFile)
INCLUDE(CheckSymbolExists)
INCLUDE(CheckLibraryExists)

check_symbol_exists(argz_add "argz.h" HAVE_ARGZ_ADD)
if( HAVE_ARGZ_ADD )
  set(SST_HAVE_ARGZ_ADD_MACRO "#define HAVE_ARGZ_ADD 1")
  set(SST_HAVE_ERROR_T_MACRO "#define HAVE_ERROR_T 1")
  set(SST_HAVE_WORKING_ARGZ_MACRO "#define HAVE_WORKING_ARGZ 1")
else()
  set(SST_HAVE_ARGZ_ADD_MACRO "/* #undef HAVE_ARGZ_ADD */")
  set(SST_HAVE_ERROR_T_MACRO "/* #undef HAVE_ERROR_T */")
  set(SST_HAVE_WORKING_ARGZ_MACRO "/* #undef  HAVE_WORKING_ARGZ */")
endif()

check_symbol_exists(argz_append "argz.h" HAVE_ARGZ_APPEND)
if( HAVE_ARGZ_APPEND )
  set(SST_HAVE_ARGZ_APPEND_MACRO "#define HAVE_ARGZ_APPEND 1")
else()
  set(SST_HAVE_ARGZ_APPEND_MACRO "/* #undef HAVE_ARGZ_APPEND */")
endif()

check_symbol_exists(argz_count "argz.h" HAVE_ARGZ_COUNT)
if( HAVE_ARGZ_COUNT )
  set(SST_HAVE_ARGZ_COUNT_MACRO "#define HAVE_ARGZ_COUNT 1")
else()
  set(SST_HAVE_ARGZ_COUNT_MACRO "/* #undef HAVE_ARGZ_COUNT */")
endif()

check_symbol_exists(argz_create_sep "argz.h" HAVE_ARGZ_CREATE_SEP)
if( HAVE_ARGZ_CREATE_SEP )
  set(SST_HAVE_ARGZ_CREATE_SEP_MACRO "#define HAVE_ARGZ_CREATE_SEP 1")
else()
  set(SST_HAVE_ARGZ_CREATE_SEP_MACRO "/* #undef HAVE_ARGZ_CREATE_SEP */")
endif()

check_include_file("argz.h" HAVE_ARGZ_H)
if( HAVE_ARGZ_H )
  set(SST_HAVE_ARGZ_H_MACRO "#define HAVE_ARGZ_H 1")
else()
  set(SST_HAVE_ARGZ_H_MACRO "/* #undef HAVE_ARGZ_H */")
endif()

check_symbol_exists(argz_insert "argz.h" HAVE_ARGZ_INSERT)
if( HAVE_ARGZ_INSERT )
  set(SST_HAVE_ARGZ_INSERT_MACRO "#define HAVE_ARGZ_INSERT 1")
else()
  set(SST_HAVE_ARGZ_INSERT_MACRO "/* #undef HAVE_ARGZ_INSERT */")
endif()

check_symbol_exists(argz_next "argz.h" HAVE_ARGZ_NEXT)
if( HAVE_ARGZ_NEXT )
  set(SST_HAVE_ARGZ_NEXT_MACRO "#define HAVE_ARGZ_NEXT 1")
else()
  set(SST_HAVE_ARGZ_NEXT_MACRO "/* #undef HAVE_ARGZ_NEXT */")
endif()

check_symbol_exists(argz_stringify "argz.h" HAVE_ARGZ_STRINGIFY)
if( HAVE_ARGZ_STRINGIFY )
  set(SST_HAVE_ARGZ_STRINGIFY_MACRO "#define HAVE_ARGZ_STRINGIFY 1")
else()
  set(SST_HAVE_ARGZ_STRINGIFY_MACRO "/* #undef HAVE_ARGZ_STRINGIFY */")
endif()

check_symbol_exists(closedir "sys/types.h" HAVE_CLOSEDIR)
if( HAVE_CLOSEDIR )
  set(SST_HAVE_CLOSEDIR_MACRO "#define HAVE_CLOSEDIR 1")
else()
  set(SST_HAVE_CLOSEDIR_MACRO "/* #undef HAVE_CLOSEDIR */")
endif()

check_include_file("c_asm.h" HAVE_C_ASM_H)
if( HAVE_C_ASM_H )
  set(SST_HAVE_C_ASM_H_MACRO "#define HAVE_C_ASM_H 1")
else()
  set(SST_HAVE_C_ASM_H_MACRO "/* #undef HAVE_C_ASM_H */")
endif()

check_symbol_exists(cygwin_conv_path "sys/cygwin.h" HAVE_DECL_CYGWIN_CONV_PATH)
if( HAVE_DECL_CYGWIN_CONV_PATH )
  set(SST_HAVE_DECL_CYGWIN_CONV_PATH_MACRO "#define HAVE_DECL_CYGWIN_CONV_PATH 1")
else()
  set(SST_HAVE_DECL_CYGWIN_CONV_PATH_MACRO "/* #undef HAVE_DECL_CYGWIN_CONV_PATH */")
endif()

check_include_file("dirent.h" HAVE_DIRENT_H)
if( HAVE_DIRENT_H )
  set(SST_HAVE_DIRENT_H_MACRO "#define HAVE_DIRENT_H 1")
else()
  set(SST_HAVE_DIRENT_H_MACRO "/* #undef HAVE_DIRENT_H */")
endif()

check_include_file("dld.h" HAVE_DLD_H)
if( HAVE_DLD_H )
  set(SST_HAVE_DLD_MACRO "#define HAVE_DLD 1")
  set(SST_HAVE_DLD_H_MACRO "#define HAVE_DLD_H 1")
else()
  set(SST_HAVE_DLD_MACRO "/* #undef HAVE_DLD */")
  set(SST_HAVE_DLD_H_MACRO "/* #undef HAVE_DLD_H */")
endif()

check_library_exists(dl dlerror "" HAVE_DLERROR)
if( HAVE_DLERROR )
  set(SST_HAVE_DLERROR_MACRO "#define HAVE_DLERROR 1")
  set(SST_HAVE_LIBDL_MACRO "#define HAVE_LIBDL 1")
else()
  set(SST_HAVE_DLERROR_MACRO "/* #undef HAVE_DLERROR */")
  set(SST_HAVE_LIBDL_MACRO "/* #undef HAVE_LIBDL */")
endif()

check_include_file("dlfcn.h" HAVE_DLFCN_H)
if( HAVE_DLFCN_H )
  set(SST_HAVE_DLFCN_H_MACRO "#define HAVE_DLFCN_H 1")
else()
  set(SST_HAVE_DLFCN_H_MACRO "/* #undef HAVE_DLFCN_H */")
endif()

check_include_file("dl.h" HAVE_DL_H)
if( HAVE_DL_H )
  set(SST_HAVE_DL_H_MACRO "#define HAVE_DL_H 1")
else()
  set(SST_HAVE_DL_H_MACRO "/* #undef HAVE_DL_H */")
endif()

check_symbol_exists(_dyld_func_lookup "dyld.h" HAVE_DYLD)
if( HAVE_DYLD )
  set(SST_HAVE_DYLD_MACRO "#define HAVE_DYLD 1")
else()
  set(SST_HAVE_DYLD_MACRO "/* #undef HAVE_DYLD */")
endif()

check_include_file("intrinsics.h" HAVE_INTRINSICS_H)
if( HAVE_INTRINSICS_H )
  set(SST_HAVE_INTRINSICS_H_MACRO "#define HAVE_INTRINSICS_H 1")
else()
  set(SST_HAVE_INTRINSICS_H_MACRO "/* #undef HAVE_INTRINSICS_H */")
endif()

check_include_file("inttypes.h" HAVE_INTTYPES_H)
if( HAVE_INTTYPES_H )
  set(SST_HAVE_INTTYPES_H_MACRO "#define HAVE_INTTYPES_H 1")
else()
  set(SST_HAVE_INTTYPES_H_MACRO "/* #undef HAVE_INTTYPES_H */")
endif()

check_library_exists(ltdl lt_dlinit "" HAVE_LIBLTDL)
if( HAVE_LIBLTDL )
  set(SST_HAVE_LIBLTDL_MACRO "#define HAVE_LIBLTDL 1")
  set(SST_HAVE_LTDL_MACRO "#define HAVE_LTDL 1")
  set(SST_LTDL_LIBS "-lltdl")
else()
  set(SST_HAVE_LIBLTDL_MACRO "/* #undef HAVE_LIBLTDL */")
  set(SST_HAVE_LTDL_MACRO "/* #undef HAVE_LTDL */")
  set(SST_LTDL_LIBS "")
endif()

check_include_file("mach/mach_time.h" HAVE_MACH_MACH_TIME_H)
if( HAVE_MACH_MACH_TIME_H )
  set(SST_HAVE_MACH_MACH_TIME_H_MACRO "#define HAVE_MACH_MACH_TIME_H 1")
else()
  set(SST_HAVE_MACH_MACH_TIME_H_MACRO "/* #undef HAVE_MACH_MACH_TIME_H */")
endif()

check_include_file("mach-o/dyld.h" HAVE_MACH_O_DYLD_H)
if( HAVE_MACH_O_DYLD_H )
  set(SST_HAVE_MACH_O_DYLD_H_MACRO "#define HAVE_MACH_O_DYLD_H 1")
else()
  set(SST_HAVE_MACH_O_DYLD_H_MACRO "/* #undef HAVE_MACH_O_DYLD_H */")
endif()

check_include_file("memory.h" HAVE_MEMORY_H)
if( HAVE_MEMORY_H )
  set(SST_HAVE_MEMORY_H_MACRO "#define HAVE_MEMORY_H 1")
else()
  set(SST_HAVE_MEMORY_H_MACRO "/* #undef HAVE_MEMORY_H */")
endif()

check_symbol_exists(opendir "dirent.h" HAVE_OPENDIR)
if( HAVE_OPENDIR )
  set(SST_HAVE_OPENDIR_MACRO "#define HAVE_OPENDIR 1")
else()
  set(SST_HAVE_OPENDIR_MACRO "/* #undef  HAVE_OPENDIR */")
endif()

check_include_file("Python.h" HAVE_PYTHON_H)
if( HAVE_PYTHON_H )
  set(SST_HAVE_PYTHON_H_MACRO "#define HAVE_PYTHON_H 1")
else()
  set(SST_HAVE_PYTHON_H_MACRO "/* #undef HAVE_PYTHON_H */")
endif()

check_symbol_exists(readdir "dirent.h" HAVE_READDIR)
if( HAVE_READDIR )
  set(SST_HAVE_READDIR_MACRO "#define HAVE_READDIR 1")
else()
  set(SST_HAVE_READDIR_MACRO "/* #undef  HAVE_READDIR */")
endif()

set(SST_HAVE_STDCXX_1Y_MACRO "#define HAVE_STDCXX_1Y 1")

check_include_file("stdint.h" HAVE_STDINT_H)
if( HAVE_STDINT_H )
  set(SST_HAVE_STDINT_H_MACRO "#define HAVE_STDINT_H 1")
else()
  set(SST_HAVE_STDINT_H_MACRO "/* #undef  HAVE_STDINT_H */")
endif()

check_include_file("sys/stat.h" HAVE_SYS_STAT_H)
if( HAVE_SYS_STAT_H )
  set(SST_HAVE_SYS_STAT_H_MACRO "#define HAVE_SYS_STAT_H 1")
else()
  set(SST_HAVE_SYS_STAT_H_MACRO "/* #undef HAVE_SYS_STAT_H */")
endif()

check_include_file("sys/time.h" HAVE_SYS_TIME_H)
if( HAVE_SYS_TIME_H )
  set(SST_HAVE_SYS_TIME_H_MACRO "#define HAVE_SYS_TIME_H 1")
else()
  set(SST_HAVE_SYS_TIME_H_MACRO "/* #undef HAVE_SYS_TIME_H */")
endif()

check_include_file("sys/types.h" HAVE_SYS_TYPES_H)
if( HAVE_SYS_TYPES_H )
  set(SST_HAVE_SYS_TYPES_H_MACRO "#define HAVE_SYS_TYPES_H 1")
else()
  set(SST_HAVE_SYS_TYPES_H_MACRO "/* #undef HAVE_SYS_TYPES_H */")
endif()

check_include_file("unistd.h" HAVE_UNISTD_H)
if( HAVE_UNISTD_H )
  set(SST_UNISTD_H_MACRO "#define HAVE_UNISTD_H 1")
else()
  set(SST_HAVE_UNISTD_H_MACRO "/* #undef HAVE_UNISTD_H */")
endif()

set(SST_BUILD_WITH_CMAKE ON)

# EOF
